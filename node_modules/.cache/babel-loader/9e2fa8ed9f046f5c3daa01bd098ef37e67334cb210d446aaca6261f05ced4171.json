{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rupap\\\\.vscode\\\\NewReact\\\\src\\\\Challenge1\\\\Emojimain.jsx\";\nimport React from \"react\";\nimport Emojis from \"./emojis\";\nimport Single from \"./Single\";\n\n// //you can do this way to map components or you can do other easy way given below\n// 1st method\n// function Create(props1) {\n//   return (\n//     <Single\n//       key={props1.id}\n//       id={props1.id}\n//       name={props1.name}\n//       img={props1.img}\n//       ds={props1.ds} />\n//   );\n// }\n\n// function Emojimain() {\n// return (\n//   <div>\n//     <h2 className=\"title\">EMOJI-PEDIA</h2>\n//     {Emojis.map(Create)}    {/* emojis.map(name of function) */}\n//   </div>\n//     );\n// }\n\n// export default Emojimain;\n\n//2nd method\n//use of arrow functions and map function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Emojimain() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"EMOJI-PEDIA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), Emojis.map(props1 => /*#__PURE__*/_jsxDEV(Single, {\n      id: props1.id,\n      name: props1.name,\n      img: props1.img,\n      ds: props1.ds\n    }, props1.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_c = Emojimain;\nexport default Emojimain;\nvar _c;\n$RefreshReg$(_c, \"Emojimain\");","map":{"version":3,"names":["React","Emojis","Single","Emojimain","map","props1","id","name","img","ds"],"sources":["C:/Users/rupap/.vscode/NewReact/src/Challenge1/Emojimain.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Emojis from \"./emojis\";\r\nimport Single from \"./Single\";\r\n\r\n\r\n// //you can do this way to map components or you can do other easy way given below\r\n// 1st method\r\n// function Create(props1) {\r\n//   return (\r\n//     <Single\r\n//       key={props1.id}\r\n//       id={props1.id}\r\n//       name={props1.name}\r\n//       img={props1.img}\r\n//       ds={props1.ds} />\r\n//   );\r\n// }\r\n\r\n// function Emojimain() {\r\n// return (\r\n//   <div>\r\n//     <h2 className=\"title\">EMOJI-PEDIA</h2>\r\n//     {Emojis.map(Create)}    {/* emojis.map(name of function) */}\r\n//   </div>\r\n//     );\r\n// }\r\n\r\n// export default Emojimain;\r\n\r\n\r\n//2nd method\r\n//use of arrow functions and map function\r\n\r\n\r\nfunction Emojimain() {\r\nreturn (\r\n  <div>\r\n    <h2 className=\"title\">EMOJI-PEDIA</h2>\r\n    {Emojis.map((props1) => \r\n    <Single\r\n      key={props1.id}\r\n      id={props1.id}\r\n      name={props1.name}\r\n      img={props1.img}\r\n      ds={props1.ds} />\r\n    )}    \r\n{/* emojis.map(name of function) */}\r\n  </div>\r\n    );\r\n}\r\nexport default Emojimain;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;;AAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AAAA;AAGA,SAASC,SAAS,GAAG;EACrB,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,OAAO;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,EACrCF,MAAM,CAACG,GAAG,CAAEC,MAAM,iBACnB,QAAC,MAAM;MAEL,EAAE,EAAEA,MAAM,CAACC,EAAG;MACd,IAAI,EAAED,MAAM,CAACE,IAAK;MAClB,GAAG,EAAEF,MAAM,CAACG,GAAI;MAChB,EAAE,EAAEH,MAAM,CAACI;IAAG,GAJTJ,MAAM,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAIG,CAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QAEG;AAER;AAAC,KAfQH,SAAS;AAgBlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}