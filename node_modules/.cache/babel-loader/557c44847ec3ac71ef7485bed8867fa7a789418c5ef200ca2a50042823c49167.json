{"ast":null,"code":"import _slicedToArray from\"C:/Users/rupap/.vscode/NewReact/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";//!for importing multiple functions :\n// import Input,{input1} from \"../loginpage/input\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Hooks(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),count=_React$useState2[0],setcount=_React$useState2[1];// count is initial name of the array and next element is the funciton to be passed\n// //*you can further create object literal :\n// const {countno, conunname} = count;\n// //*you can further give names of the objects literal\n// const {countno : num1 ,countname : string} = count;\n// //*you can further provide value of the objects which it will take in action if the object's value is undefined \n// const {countno = \"433\" ,countname = \"dhaval\"} = count;\n// //*if there is another object inside an object do this:\n//    const {countno, conuntime , counname : {fname,lname} } = count;\nfunction increase(){setcount(count+1);//Note: here don't use count++ as we are using hooks element setcount\n}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:count}),/*#__PURE__*/_jsx(\"button\",{onClick:increase,children:\"+\"})]});}export default Hooks;","map":{"version":3,"names":["React","Hooks","useState","count","setcount","increase"],"sources":["C:/Users/rupap/.vscode/NewReact/src/React Components/hooks.jsx"],"sourcesContent":["import React from \"react\";\r\n//!for importing multiple functions :\r\n// import Input,{input1} from \"../loginpage/input\";\r\n\r\nfunction Hooks() {\r\n\r\n\r\n  const [count, setcount] = React.useState(0);\r\n  // count is initial name of the array and next element is the funciton to be passed\r\n\r\n  // //*you can further create object literal :\r\n  // const {countno, conunname} = count;\r\n\r\n  // //*you can further give names of the objects literal\r\n  // const {countno : num1 ,countname : string} = count;\r\n\r\n  // //*you can further provide value of the objects which it will take in action if the object's value is undefined \r\n  // const {countno = \"433\" ,countname = \"dhaval\"} = count;\r\n\r\n  // //*if there is another object inside an object do this:\r\n  //    const {countno, conuntime , counname : {fname,lname} } = count;\r\n\r\n  function increase() {\r\n    setcount(count+1); //Note: here don't use count++ as we are using hooks element setcount\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{count}</h1>\r\n      <button onClick={increase}>+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hooks;"],"mappings":"qHAAA,MAAOA,MAAK,KAAM,OAAO,CACzB;AACA;AAAA,wFAEA,QAASC,MAAK,EAAG,CAGf,oBAA0BD,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC,oDAApCC,KAAK,qBAAEC,QAAQ,qBACtB;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA,QAASC,SAAQ,EAAG,CAClBD,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAE;AACrB,CAEA,mBACE,oCACE,oBAAKA,KAAK,EAAM,cAChB,eAAQ,OAAO,CAAEE,QAAS,UAAC,GAAC,EAAS,GACjC,CAEV,CAEA,cAAeJ,MAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}